Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm328p.o (exit)
/usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_tablejump.o)
                              main.o (__tablejump2__)
/usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
                              AVR_TTC_scheduler.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

SCH_tasks_G         0x23              AVR_TTC_scheduler.o
_echo               0x1               main.o
_gv_counter         0x2               main.o
adc_value           0x2               main.o

Discarded input sections

 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm328p.o
 .text          0x0000000000000000        0x0 AVR_TTC_scheduler.o
 .bss           0x0000000000000000        0x0 AVR_TTC_scheduler.o
 .text          0x0000000000000000        0x0 main.o
 .bss           0x0000000000000000        0x0 main.o
 .text.setStateRollDown
                0x0000000000000000        0x6 main.o
 .text.setStateRollUp
                0x0000000000000000        0x8 main.o
 .text.setModeToManual
                0x0000000000000000        0x8 main.o
 .text.setManualToMode
                0x0000000000000000        0x6 main.o
 .text.redLightOff
                0x0000000000000000        0x4 main.o
 .text.greenLightOff
                0x0000000000000000        0x4 main.o
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_tablejump.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_tablejump.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_tablejump.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_tablejump.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_tablejump.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_tablejump.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_tablejump.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_tablejump.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm328p.o
LOAD AVR_TTC_scheduler.o
LOAD main.o
START GROUP
LOAD /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x64a
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm328p.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table.__vector_18
                0x0000000000000068       0x3c main.o
                0x00000000000000a4                . = ALIGN (0x2)
                0x00000000000000a4                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000000000000a4        0x0 linker stubs
 *(.trampolines*)
                0x00000000000000a4                __trampolines_end = .
 *(.progmem*)
                0x00000000000000a4                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000000000000a4                __ctors_start = .
 *(.ctors)
                0x00000000000000a4                __ctors_end = .
                0x00000000000000a4                __dtors_start = .
 *(.dtors)
                0x00000000000000a4                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000000000000a4        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm328p.o
                0x00000000000000a4                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000000000000a4        0xc /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000000000000b0       0x16 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
                0x00000000000000b0                __do_copy_data
 .init4         0x00000000000000c6       0x10 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
                0x00000000000000c6                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000d6        0x8 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm328p.o
 *(.init9)
 *(.text)
 .text          0x00000000000000de        0x4 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm328p.o
                0x00000000000000de                __vector_22
                0x00000000000000de                __vector_1
                0x00000000000000de                __vector_24
                0x00000000000000de                __vector_12
                0x00000000000000de                __bad_interrupt
                0x00000000000000de                __vector_6
                0x00000000000000de                __vector_3
                0x00000000000000de                __vector_23
                0x00000000000000de                __vector_25
                0x00000000000000de                __vector_13
                0x00000000000000de                __vector_17
                0x00000000000000de                __vector_19
                0x00000000000000de                __vector_7
                0x00000000000000de                __vector_5
                0x00000000000000de                __vector_4
                0x00000000000000de                __vector_9
                0x00000000000000de                __vector_21
                0x00000000000000de                __vector_15
                0x00000000000000de                __vector_8
                0x00000000000000de                __vector_14
                0x00000000000000de                __vector_10
                0x00000000000000de                __vector_16
                0x00000000000000de                __vector_20
                0x00000000000000e2                . = ALIGN (0x2)
 *(.text.*)
 .text.SCH_Add_Task
                0x00000000000000e2       0x30 AVR_TTC_scheduler.o
                0x00000000000000e2                SCH_Add_Task
 .text.SCH_Delete_Task
                0x0000000000000112       0x1e AVR_TTC_scheduler.o
                0x0000000000000112                SCH_Delete_Task
 .text.SCH_Dispatch_Tasks
                0x0000000000000130       0x56 AVR_TTC_scheduler.o
                0x0000000000000130                SCH_Dispatch_Tasks
 .text.SCH_Init_T1
                0x0000000000000186       0x2c AVR_TTC_scheduler.o
                0x0000000000000186                SCH_Init_T1
 .text.SCH_Start
                0x00000000000001b2        0x4 AVR_TTC_scheduler.o
                0x00000000000001b2                SCH_Start
 .text.__vector_11
                0x00000000000001b6       0x64 AVR_TTC_scheduler.o
                0x00000000000001b6                __vector_11
 .text.checkDistanceMeter
                0x000000000000021a       0x40 main.o
                0x000000000000021a                checkDistanceMeter
 .text.uart_init
                0x000000000000025a       0x1c main.o
                0x000000000000025a                uart_init
 .text.uart_putByte
                0x0000000000000276        0xe main.o
                0x0000000000000276                uart_putByte
 .text.uart_putDouble
                0x0000000000000284       0x12 main.o
                0x0000000000000284                uart_putDouble
 .text.uart_getByte
                0x0000000000000296        0xe main.o
                0x0000000000000296                uart_getByte
 .text.adc_init
                0x00000000000002a4       0x22 main.o
                0x00000000000002a4                adc_init
 .text.init_ports
                0x00000000000002c6       0x16 main.o
                0x00000000000002c6                init_ports
 .text.init_timer
                0x00000000000002dc        0xc main.o
                0x00000000000002dc                init_timer
 .text.init_ext_int
                0x00000000000002e8        0xc main.o
                0x00000000000002e8                init_ext_int
 .text.getAdcValue
                0x00000000000002f4       0x30 main.o
                0x00000000000002f4                getAdcValue
 .text.getTemp  0x0000000000000324        0xa main.o
                0x0000000000000324                getTemp
 .text.getTempLimit
                0x000000000000032e        0x8 main.o
                0x000000000000032e                getTempLimit
 .text.getLight
                0x0000000000000336        0xa main.o
                0x0000000000000336                getLight
 .text.getLightLimit
                0x0000000000000340        0xc main.o
                0x0000000000000340                getLightLimit
 .text.getMaxDownLimit
                0x000000000000034c        0x8 main.o
                0x000000000000034c                getMaxDownLimit
 .text.getMinDownLimit
                0x0000000000000354        0x8 main.o
                0x0000000000000354                getMinDownLimit
 .text.getCurrentState
                0x000000000000035c        0x8 main.o
                0x000000000000035c                getCurrentState
 .text.setTempLimit
                0x0000000000000364       0x16 main.o
                0x0000000000000364                setTempLimit
 .text.setLightLimit
                0x000000000000037a       0x26 main.o
                0x000000000000037a                setLightLimit
 .text.setMaxDownLimit
                0x00000000000003a0       0x16 main.o
                0x00000000000003a0                setMaxDownLimit
 .text.setMinDownLimit
                0x00000000000003b6       0x16 main.o
                0x00000000000003b6                setMinDownLimit
 .text.redLightOn
                0x00000000000003cc        0x4 main.o
                0x00000000000003cc                redLightOn
 .text.greenLightOn
                0x00000000000003d0        0x4 main.o
                0x00000000000003d0                greenLightOn
 .text.blinkYellowLed
                0x00000000000003d4       0x50 main.o
                0x00000000000003d4                blinkYellowLed
 .text.checkTempLimit
                0x0000000000000424       0x28 main.o
                0x0000000000000424                checkTempLimit
 .text.checkLightLimit
                0x000000000000044c       0x28 main.o
                0x000000000000044c                checkLightLimit
 .text.getCurrentDistance
                0x0000000000000474        0xc main.o
                0x0000000000000474                getCurrentDistance
 .text.startup.main
                0x0000000000000480       0x70 main.o
                0x0000000000000480                main
 .text.__vector_2
                0x00000000000004f0       0x42 main.o
                0x00000000000004f0                __vector_2
 .text.__vector_18
                0x0000000000000532      0x108 main.o
                0x0000000000000532                __vector_18
 .text.libgcc   0x000000000000063a        0xc /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_tablejump.o)
                0x000000000000063a                __tablejump2__
                0x000000000000063e                __tablejump__
                0x0000000000000646                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000646        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
                0x0000000000000646                exit
                0x0000000000000646                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000646        0x4 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x000000000000064a                _etext = .

.data           0x0000000000800100        0x6 load address 0x000000000000064a
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm328p.o
 .data          0x0000000000800100        0x0 AVR_TTC_scheduler.o
 .data          0x0000000000800100        0x0 main.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_tablejump.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 .data._state   0x0000000000800100        0x1 main.o
                0x0000000000800100                _state
 .data._minDownLimit
                0x0000000000800101        0x1 main.o
                0x0000000000800101                _minDownLimit
 .data._maxDownLimit
                0x0000000000800102        0x1 main.o
                0x0000000000800102                _maxDownLimit
 .data._lightLimit
                0x0000000000800103        0x2 main.o
                0x0000000000800103                _lightLimit
 .data._tempLimit
                0x0000000000800105        0x1 main.o
                0x0000000000800105                _tempLimit
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800106                . = ALIGN (0x2)
                0x0000000000800106                _edata = .
                0x0000000000800106                PROVIDE (__data_end, .)

.bss            0x0000000000800106       0x2b
                0x0000000000800106                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 .bss._distanceValue
                0x0000000000800106        0x2 main.o
                0x0000000000800106                _distanceValue
 .bss._currentMode
                0x0000000000800108        0x1 main.o
                0x0000000000800108                _currentMode
 *(COMMON)
 COMMON         0x0000000000800109       0x23 AVR_TTC_scheduler.o
                0x0000000000800109                SCH_tasks_G
 COMMON         0x000000000080012c        0x5 main.o
                0x000000000080012c                _echo
                0x000000000080012d                _gv_counter
                0x000000000080012f                adc_value
                0x0000000000800131                PROVIDE (__bss_end, .)
                0x000000000000064a                __data_load_start = LOADADDR (.data)
                0x0000000000000650                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800131        0x0
                0x0000000000800131                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800131                PROVIDE (__noinit_end, .)
                0x0000000000800131                _end = .
                0x0000000000800131                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x1bc0
 *(.stab)
 .stab          0x0000000000000000      0x864 AVR_TTC_scheduler.o
 .stab          0x0000000000000864     0x135c main.o
                                       0x1698 (size before relaxing)

.stabstr        0x0000000000000000     0x13bd
 *(.stabstr)
 .stabstr       0x0000000000000000     0x13bd AVR_TTC_scheduler.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 AVR_TTC_scheduler.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 main.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(control-units.elf elf32-avr)
LOAD linker stubs
